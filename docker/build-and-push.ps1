# File: docker\build-and-push.ps1
<#
.SYNOPSIS
    Build & push a multi-stage Docker image for the Zeon-Refiller project.

.DESCRIPTION
    ‚Ä¢ –ß–∏—Ç–∞–µ—Ç –≤–µ—Ä—Å–∏—é –∏–∑ pyproject.toml (–µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω ¬≠-Tag).
    ‚Ä¢ –°–æ–±–∏—Ä–∞–µ—Ç –æ–±—Ä–∞–∑ —á–µ—Ä–µ–∑ BuildKit / buildx, –∏—Å–ø–æ–ª—å–∑—É—è docker/Dockerfile –∏
        –∫–æ—Ä–µ–Ω—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –∫–∞–∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç.
    ‚Ä¢ –¢–µ–≥–∏—Ä—É–µ—Ç –∫–∞–∫ <ImageName>:<Tag> –∏ <ImageName>:latest, –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –ø—É—à–∏—Ç
        –≤ Docker Hub –∏ —á–∏—Å—Ç–∏—Ç –ª–æ–∫–∞–ª—å–Ω—ã–π build-cache.

.PARAMETER ImageName
    –ü–æ–ª–Ω–æ–µ –∏–º—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Docker Hub (–Ω–∞–ø—Ä–∏–º–µ—Ä `airerik/zeon-refiller`).
    –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: `airerik/zeon-refiller`.

.PARAMETER Tag
    –¢–µ–≥ –æ–±—Ä–∞–∑–∞ (–≤–µ—Ä—Å–∏—è). –ï—Å–ª–∏ –æ–ø—É—â–µ–Ω, –∏–∑–≤–ª–µ–∫–∞–µ—Ç—Å—è –∏–∑ –ø–æ–ª—è `version`
    –≤ pyproject.toml.

.EXAMPLE
    PS> .\docker\build-and-push.ps1
    –°–æ–±–µ—Ä—ë—Ç –∏ –∑–∞–ø—É—à–∏—Ç airerik/zeon-refiller:<–≤–µ—Ä—Å–∏—è_–∏–∑_pyproject> –∏ :latest.

.EXAMPLE
    PS> .\docker\build-and-push.ps1 -ImageName myorg/refiller -Tag v2.0.1
    –°–æ–±–µ—Ä—ë—Ç –∏ –∑–∞–ø—É—à–∏—Ç myorg/refiller:v2.0.1 –∏ :latest.
#>

[CmdletBinding()]
param (
    [Parameter(Position = 0)]
    [string]$ImageName = "airerik/zeon-refiller",

    [Parameter(Position = 1)]
    [string]$Tag
)

# Enable BuildKit
$ErrorActionPreference = "Stop"
$Env:DOCKER_BUILDKIT = "1"

Write-Host "üõ†  –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–æ—á–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ Zeon-Refiller..." -ForegroundColor Cyan

# ---------- 1. –†–∞—Å–∫–ª–∞–¥–∫–∞ –ø—É—Ç–µ–π –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Å–∫—Ä–∏–ø—Ç–∞ -----------------
$ScriptDir   = $PSScriptRoot                       # ‚Ä¶\docker
$RepoRoot    = (Resolve-Path "$ScriptDir\..").Path # –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
$pyproject   = Join-Path $RepoRoot  "pyproject.toml"
$Dockerfile  = Join-Path $ScriptDir "Dockerfile"

if (-not (Test-Path $pyproject))  { throw "pyproject.toml –Ω–µ –Ω–∞–π–¥–µ–Ω: $pyproject" }
if (-not (Test-Path $Dockerfile)) { throw "Dockerfile –Ω–µ –Ω–∞–π–¥–µ–Ω:  $Dockerfile" }

# ---------- 2. –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–≥ (version) ------------------------------
if (-not $Tag) {
    Write-Host "üîç  –ò–∑–≤–ª–µ–∫–∞–µ–º –≤–µ—Ä—Å–∏—é –∏–∑ pyproject.toml..." -ForegroundColor Cyan
    $content = Get-Content -Raw -Path $pyproject
    $m = [regex]::Match($content, 'version\s*=\s*"(?<ver>[^"]+)"')
    if (-not $m.Success) { throw "–ü–æ–ª–µ version –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ pyproject.toml" }
    $Tag = $m.Groups['ver'].Value
}

Write-Host "üì¶  –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–≥–∏: $ImageName:$Tag  –∏  $ImageName:latest" `
    -ForegroundColor Green

# ---------- 3. –°–æ–±–∏—Ä–∞–µ–º –∏ –ø—É—à–∏–º –æ–±—Ä–∞–∑ --------------------------------
Write-Host "üê≥  –ó–∞–ø—É—Å–∫–∞–µ–º docker buildx build..." -ForegroundColor Cyan

$buildCmd = @(
    "docker", "buildx", "build",
    "--builder",  "default",             # –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ builder 'default'
    "--platform", "linux/amd64",
    "--file",     "`"$Dockerfile`"",     # —ç–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∫–∞–≤—ã—á–∫–∞–º–∏ –Ω–∞ —Å–ª—É—á–∞–π –ø—Ä–æ–±–µ–ª–æ–≤
    "--tag",      "$ImageName:$Tag",
    "--tag",      "$ImageName:latest",
    "--push",
    "--progress", "plain",
    "`"$RepoRoot`""                      # –∫–æ–Ω—Ç–µ–∫—Å—Ç = –≤–µ—Å—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
) -join " "

Write-Host $buildCmd -ForegroundColor Yellow
iex $buildCmd                             # –≤—ã–ø–æ–ª–Ω—è–µ–º

# ---------- 4. –ß–∏—Å—Ç–∏–º buildx cache -----------------------------------
Write-Host "üßπ  –û—á–∏—â–∞–µ–º buildx cache..." -ForegroundColor Cyan
docker buildx prune -f | Out-Null

Write-Host "‚úÖ  –ì–æ—Ç–æ–≤–æ! –û–±—Ä–∞–∑ $ImageName:$Tag –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ Docker Hub." `
    -ForegroundColor Green
